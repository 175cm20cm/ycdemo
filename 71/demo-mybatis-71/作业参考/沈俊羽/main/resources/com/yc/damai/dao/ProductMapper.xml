<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 命名空间， 映射文件在项目中的地址 -->
<mapper namespace="com.yc.damai.dao.ProductMapper">

	<cache></cache>

	<!-- 手动映射配置 -->
	<resultMap id="baseMapper" type="com.yc.damai.bean.Product">
		<!-- property 定义实体类属性名 -->
		<result property="marketPrice" column="market_price"></result>
		<result property="shopPrice" column="shop_price"></result>
		<result property="isHot" column="is_hot"></result>
	</resultMap>

	<!-- 查询所有商品 -->
	<select id="selectAll" resultType="com.yc.damai.bean.Product">
		select * from product
	</select>

	<select id="selectByHot" resultType="com.yc.damai.bean.Product">
		select * from product where
		is_hot=#{isHot}
	</select>

	<!-- 命名参数 -->
	<select id="selectById" resultMap="baseMapper">
		select * from product where
		pid=#{pid}
	</select>

	<insert id="create">
		insert into product
		values(null,#{pname},#{marketPrice},#{shopPrice},#{image},#{pdesc},#{isHot},#{pdate},#{csid})
	</insert>


	<!-- 传入的参数是实体对象 -->
	<select id="selectByObj" resultType="com.yc.damai.bean.Product">
		select * from product
		<where>
			<if test="pname != null">
				and pname like #{pname}
			</if>
			<if test="pdesc != null">
				and pdesc like #{pdesc}
			</if>
		</where>
	</select>

	<select id="selectByFlag" resultType="com.yc.damai.bean.Product">
		select * from product
		<where>
			<choose>
				<when test="flag == 1">
					is_hot=#{isHot}
				</when>
				<when test="flag == 2">
					is_hot like #{isHot}
				</when>
				<when test="flag == 3">
					is_hot is null
				</when>
				<when test="flag == 4">
					is_hot is not null
				</when>
				<otherwise>
					is_hot=1
				</otherwise>
			</choose>
		</where>
		<!-- 排序的字段 ${xxx} 语句占位符 #{xxx} 参数占位符 -->
		<if test="ordername != null">
			order by ${ordername}
		</if>
	</select>


	<update id="modify">
		update product
		<set>
			<if test="pname != null">
				pname=#{pname},
			</if>
			<if test="pdesc != null">
				pdesc=#{pdesc},
			</if>
			<if test="image != null">
				image=#{image},
			</if>
		</set>

		where pid=#{pid}
	</update>

	<select id="selectInCsid" resultType="com.yc.damai.bean.Product">

		select
		<include refid="baseColumns" />
		from product
		<where>
			<foreach collection="list" item="item" open="csid in ("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</select>

	<!-- MySQL 获取自增列值 useGeneratedKeys="true" 开启自增列返回功能 keyColumn="pid" 自增列名 
		keyProperty="pid" 对应的属性名 -->
	<insert id="createKeyMySql" useGeneratedKeys="true"
		keyColumn="pid" keyProperty="pid">
		insert into product
		values(null,#{pname},#{marketPrice},#{shopPrice},#{image},#{pdesc},#{isHot},#{pdate},#{csid})
	</insert>

	<!-- Oracle获取序列值 使用 selectKey -->
	<insert id="createKeyOracle" useGeneratedKeys="true">
		<selectKey keyColumn="pid" keyProperty="pid" order="BEFORE">
			select
			seq_pid.nextval from dual
		</selectKey>
		insert into product
		values(null,#{pname},#{marketPrice},#{shopPrice},#{image},#{pdesc},#{isHot},#{pdate},#{csid})
	</insert>

	<!-- 统计查询 复杂的查询 -->
	<select id="select" resultType="map">
		${sql}
	</select>




	<select id="backselect" resultMap="baseMapper">
		select
		<include refid="backColumns" />
		from product
		<where>
			<if test="pname != null">
				pname=#{pname} and
			</if>
			<if test="before_price != null &amp;&amp; after_price != null">
				market_price between #{before_price} and #{after_price} and
			</if>
			<if test="putdate != null &amp;&amp; outdate != null">
				pdate between #{putdate} and #{outdate} and
			</if>
			<if test="image == 1">
				image is not null and
			</if>
			<if test="image == 0">
				image is null and
			</if>
			<if test="isHot != null">
				<foreach collection="list"  item="item" separator=" and ">
					<if test="item !=null">
						is_hot=#{item}
					</if>
				</foreach>
			</if>
			<if test="type != null">
				<foreach collection="list" item="item" separator=" and ">
					<if test="item !=null">
						csid=#{item}
					</if>
				</foreach>
			</if>
		</where>
	</select>

	<select id="selectByCondition" resultMap="baseMapper">
		select a.* from product a join categorysecond b on a.csid = b.csid
		<where>
			<if test="pname != null">
				and pname like #{pname}
			</if>

			<if test="begin !=null and end != null">
				and pdate between #{begin} and #{end}
			</if>

			<choose>
				<when test="priceType == 1">
					and shop_price &lt;= 100
				</when>
				<when test="priceType == 2">
					and shop_price between 101 and 500
				</when>
				<when test="priceType == 3">
					and shop_price between 501 and 1000
				</when>
				<when test="priceType == 4">
					and shop_price between 1001 and 5000
				</when>
				<when test="priceType == 5">
					and shop_price between 5001 and 10000
				</when>
				<when test="priceType == 6">
					and shop_price &gt;= 10001
				</when>
			</choose>
			<choose>
				<when test="imageType == 1">
					and image is not null
				</when>
				<when test="imageType == 2">
					and image is null
				</when>
			</choose>
			<if test="hotList != null">
				<foreach collection="hotList" item="hot"
					open="and is_hot in (" close=")" separator=",">
					#{hot}
				</foreach>
			</if>
			<if test="cidList != null">
				<foreach collection="cidList" item="cid"
					open="and b.cid in (" close=")" separator=",">
					#{cid}
				</foreach>
			</if>
			<!-- and b.cid in (?,?,?,?,?) -->

		</where>

	</select>

	<!-- MyBatis 调用存储过程  -->
	<select id="getBlogCountByName" statementType="CALLABLE"  parameterType="java.util.HashMap">
		<![CDATA[
			{call proc_getBlogCountByAuthor (
			
				#{username,  mode=IN,  jdbcType=VARCHAR },
				
				#{blogCount,
					mode=OUT,
					jdbcType=INTEGER}
			)}
		]]>
	</select>

<!-- 	<select id="selectByPnameAndIsHot" resultType="com.yc.damai.bean.Product">
		select * from product where pname=#{pname} and is_hot=#{isHot}
	</select> -->



	<sql id="baseColumns">
		pname,image,shop_price
	</sql>
	<sql id="backColumns">
		pid,pname,market_price,shop_price,image,pdesc,is_hot,pdate
	</sql>

</mapper>