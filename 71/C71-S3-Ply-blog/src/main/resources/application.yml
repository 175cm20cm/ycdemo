server:
  port: 80

# JSP 集成配置  不要使用 tab 建输入空格
spring:
  mvc:
    view:
      prefix: WEB-INF/jsp/
      suffix: .jsp

  datasource:
     url: jdbc:mysql://127.0.0.1/C71-S3-Ply-blog?useUnicode=true&characterEncoding=UTF-8
     username: root
     password: a
     driver-class-name: com.mysql.jdbc.Driver
  # 配置 静态资源路径
  resources:
     staticLocations: file:/d:/blogimg
  mail:
    # //邮箱服务器地址
    host: smtp.qq.com
    # //用户名 
    username: 306529917@qq.com
    # //密码 
    password: 省略
    default-encoding: UTF-8
     
# //以谁来发送邮件    用户自定义的参数
mail:
  fromMail:
    addr: 306529917@qq.com
 

     
logging:
  level:
    com:
      yc: debug
      
# log 日志等级：   debug error warn info   
# log.debug("调试信息")  =》 system.out

# SpringBoot 如何实现自动化配置
#   1、pom.xml
#     springboot 的配置文件  application*.yml
#     springboot 默认指定了常用的依赖版本
#   2、SpringBoot启动类
#      SpringBootApplication 注解构成
#         @SpringBootConfiguration
#             @Configuration  SpringIOC容器配置注解 ===》 beans.xml
#         @ComponentScan("com.yc.xxxx")
#             组件扫描 : springboot 会自动扫描 启动类 所在包以及子包
#         @EnableAutoConfiguration
#             @AutoConfigurationPackage  自动配置包
#             @Import(AutoConfigurationImportSelector.class)   导入启动选择器

#             WebMvcAutoConfiguration
#               @Conditionalxxxx  条件注解
#                 @ConditionalOnClass({ Servlet.class, DispatcherServlet.class, WebMvcConfigurer.class })
#                   该注解判断当前运行环境中是否包含 这些类
#                 @ConditionalOnMissingBean(WebMvcConfigurationSupport.class)
#                   判断如果环境中包含该类对象，如果包含，说环境中已经配置好了SpringMVC框架

   
# 启动 博客项目